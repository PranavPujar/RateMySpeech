{"ast":null,"code":"// src/VoiceRecorder.jsx\nimport React,{useState,useRef}from'react';import'./VoiceRecorder.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VoiceRecorder=_ref=>{let{onDisplayUpdate}=_ref;const[recording,setRecording]=useState(false);const[audioURL,setAudioURL]=useState('');const[generateable,setGenerateable]=useState(false);const mediaRecorderRef=useRef(null);const chunksRef=useRef([]);const audioStreamRef=useRef(null);const audioBlobRef=useRef(null);//stores the  blob of audio for transmission\nconst startRecording=async()=>{const stream=await navigator.mediaDevices.getUserMedia({audio:true});setGenerateable(false);audioStreamRef.current=stream;mediaRecorderRef.current=new MediaRecorder(stream);mediaRecorderRef.current.ondataavailable=event=>{chunksRef.current.push(event.data);};mediaRecorderRef.current.onstop=()=>{const blob=new Blob(chunksRef.current,{type:'audio/wav'});const url=URL.createObjectURL(blob);audioBlobRef.current=blob;// Store Blob in audioBlobRef\nsetAudioURL(url);chunksRef.current=[];// Stop all tracks to release the microphone\naudioStreamRef.current.getTracks().forEach(track=>track.stop());};mediaRecorderRef.current.start();setRecording(true);};const transmitAudioToBackend=async()=>{if(audioBlobRef.current){const formData=new FormData();formData.append(\"file\",audioBlobRef.current,\"recording.wav\");try{const response=await fetch(\"http://127.0.0.1:8000/audio\",{//change endpoint address prior to deployment\nmethod:\"POST\",body:formData});if(response.ok){console.log(\"Audio file successfully transmitted to the backend\");const output=await response.json();return output;// Return the response JSON\n}else{console.error(\"Failed to transmit audio file\");}}catch(error){console.error(\"Error transmitting audio file\",error);}}else{console.error(\"No audio to transmit\");}};const extractGPTAnalysis=async transcription=>{console.log(JSON.stringify({transcription}));try{const response=await fetch(\"http://127.0.0.1:8000/evaluate\",{//change endpoint address prior to deployment\nmethod:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({transcription})});const result=await response.json();console.log(result);onDisplayUpdate(result);}catch(error){console.error(\"Error fetching data:\",error);}};const stopRecording=()=>{mediaRecorderRef.current.stop();setRecording(false);setGenerateable(true);};const handleDoneClick=async()=>{const response=await transmitAudioToBackend();await extractGPTAnalysis(response.transcription);setAudioURL('');setGenerateable(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"text-holder\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Audio Recorder\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startRecording,disabled:recording,className:\"record-button\",type:\"button\",children:\"Record\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stopRecording,disabled:!recording,className:\"stop-button\",type:\"button\",children:\"\\u25A0 \"})]}),audioURL&&/*#__PURE__*/_jsx(\"audio\",{src:audioURL,controls:true}),generateable&&/*#__PURE__*/_jsx(\"button\",{onClick:handleDoneClick,className:\"done-button\",type:\"button\",children:\"Analyze Performance\"})]});};export default VoiceRecorder;","map":{"version":3,"names":["React","useState","useRef","jsx","_jsx","jsxs","_jsxs","VoiceRecorder","_ref","onDisplayUpdate","recording","setRecording","audioURL","setAudioURL","generateable","setGenerateable","mediaRecorderRef","chunksRef","audioStreamRef","audioBlobRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","getTracks","forEach","track","stop","start","transmitAudioToBackend","formData","FormData","append","response","fetch","method","body","ok","console","log","output","json","error","extractGPTAnalysis","transcription","JSON","stringify","headers","result","stopRecording","handleDoneClick","className","children","onClick","disabled","src","controls"],"sources":["/Users/pranavpujar/Library/Mobile Documents/com~apple~CloudDocs/Desktop/hack_submission/RateMySpeech/src/components/VoiceRecorder.jsx"],"sourcesContent":["// src/VoiceRecorder.jsx\nimport React, { useState, useRef } from 'react';\nimport './VoiceRecorder.css'; \n\nconst VoiceRecorder = ({ onDisplayUpdate }) => {\n  const [recording, setRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [generateable, setGenerateable] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const audioStreamRef = useRef(null);\n  const audioBlobRef = useRef(null); //stores the  blob of audio for transmission\n\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    setGenerateable(false);\n    audioStreamRef.current = stream;\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    mediaRecorderRef.current.ondataavailable = (event) => {\n      chunksRef.current.push(event.data);\n    };\n    mediaRecorderRef.current.onstop = () => {\n      const blob = new Blob(chunksRef.current, { type: 'audio/wav' });\n      const url = URL.createObjectURL(blob);\n      audioBlobRef.current = blob; // Store Blob in audioBlobRef\n      setAudioURL(url);\n      chunksRef.current = [];\n      // Stop all tracks to release the microphone\n      audioStreamRef.current.getTracks().forEach((track) => track.stop());\n    };\n    mediaRecorderRef.current.start();\n    setRecording(true);\n  };\n\n  const transmitAudioToBackend = async () => {\n    if (audioBlobRef.current) {\n      const formData = new FormData();\n      formData.append(\"file\", audioBlobRef.current, \"recording.wav\");\n\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/audio\", { //change endpoint address prior to deployment\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (response.ok) {\n          console.log(\"Audio file successfully transmitted to the backend\");\n          const output = await response.json();\n          return output; // Return the response JSON\n        } else {\n          console.error(\"Failed to transmit audio file\");\n        }\n      } catch (error) {\n        console.error(\"Error transmitting audio file\", error);\n      }\n    } else {\n      console.error(\"No audio to transmit\");\n    }\n  };\n\n  const extractGPTAnalysis = async (transcription) => {\n    console.log(JSON.stringify({ transcription }))\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/evaluate\", { //change endpoint address prior to deployment\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ transcription }),\n      });\n\n      const result = await response.json();\n      console.log(result);\n\n      onDisplayUpdate(result);\n\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n    setGenerateable(true);\n  };\n\n  const handleDoneClick = async () => {\n    const response = await transmitAudioToBackend();\n    await extractGPTAnalysis(response.transcription);\n\n    setAudioURL('');\n    setGenerateable(false);\n  };\n\n  return (\n    <div className=\"text-holder\">\n      <h1>Audio Recorder</h1>\n      <div className=\"button-container\">\n        <button\n          onClick={startRecording}\n          disabled={recording}\n          className=\"record-button\"\n          type=\"button\"\n        >\n          Record\n        </button>\n        <button\n          onClick={stopRecording}\n          disabled={!recording}\n          className=\"stop-button\"\n          type=\"button\"\n        >\n          &#x25A0; {/* Unicode for the stop icon */}\n        </button>\n      </div>\n      {audioURL && <audio src={audioURL} controls />}\n      {generateable && (\n        <button onClick={handleDoneClick} className=\"done-button\" type=\"button\">\n          Analyze Performance\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default VoiceRecorder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}