{"ast":null,"code":"var _jsxFileName = \"/Users/pranavpujar/Library/Mobile Documents/com~apple~CloudDocs/Desktop/hack_submission/RateMySpeech/src/components/VoiceRecorder.jsx\",\n  _s = $RefreshSig$();\n// src/VoiceRecorder.jsx\nimport React, { useState, useRef } from 'react';\nimport './VoiceRecorder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecorder = ({\n  onDisplayUpdate\n}) => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [generateable, setGenerateable] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const audioStreamRef = useRef(null);\n  const audioBlobRef = useRef(null); //stores the  blob of audio for transmission\n\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    setGenerateable(false);\n    audioStreamRef.current = stream;\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    mediaRecorderRef.current.ondataavailable = event => {\n      chunksRef.current.push(event.data);\n    };\n    mediaRecorderRef.current.onstop = () => {\n      const blob = new Blob(chunksRef.current, {\n        type: 'audio/wav'\n      });\n      const url = URL.createObjectURL(blob);\n      audioBlobRef.current = blob; // Store Blob in audioBlobRef\n      setAudioURL(url);\n      chunksRef.current = [];\n      // Stop all tracks to release the microphone\n      audioStreamRef.current.getTracks().forEach(track => track.stop());\n    };\n    mediaRecorderRef.current.start();\n    setRecording(true);\n  };\n  const transmitAudioToBackend = async () => {\n    if (audioBlobRef.current) {\n      const formData = new FormData();\n      formData.append(\"file\", audioBlobRef.current, \"recording.wav\");\n      try {\n        const response = await fetch(\"http://localhost:8000/audio\", {\n          //change endpoint address prior to deployment\n          method: \"POST\",\n          body: formData\n        });\n        if (response.ok) {\n          console.log(\"Audio file successfully transmitted to the backend\");\n          const output = await response.json();\n          return output; // Return the response JSON\n        } else {\n          console.error(\"Failed to transmit audio file\");\n        }\n      } catch (error) {\n        console.error(\"Error transmitting audio file\", error);\n      }\n    } else {\n      console.error(\"No audio to transmit\");\n    }\n  };\n  const extractGPTAnalysis = async transcription => {\n    console.log(JSON.stringify({\n      transcription\n    }));\n    try {\n      const response = await fetch(\"http://localhost:8000/evaluate\", {\n        //change endpoint address prior to deployment\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          transcription\n        })\n      });\n      const result = await response.json();\n      console.log(result);\n      onDisplayUpdate(result);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n    setGenerateable(true);\n  };\n  const handleDoneClick = async () => {\n    const response = await transmitAudioToBackend();\n    await extractGPTAnalysis(response.transcription);\n    setAudioURL('');\n    setGenerateable(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-holder\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio Recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        disabled: recording,\n        className: \"record-button\",\n        type: \"button\",\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        disabled: !recording,\n        className: \"stop-button\",\n        type: \"button\",\n        children: \"\\u25A0 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), audioURL && /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: audioURL,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 20\n    }, this), generateable && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDoneClick,\n      className: \"done-button\",\n      type: \"button\",\n      children: \"Analyze Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceRecorder, \"iy4f9nTNJltGoQWYfxPZJyVTjn8=\");\n_c = VoiceRecorder;\nexport default VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","VoiceRecorder","onDisplayUpdate","_s","recording","setRecording","audioURL","setAudioURL","generateable","setGenerateable","mediaRecorderRef","chunksRef","audioStreamRef","audioBlobRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","getTracks","forEach","track","stop","start","transmitAudioToBackend","formData","FormData","append","response","fetch","method","body","ok","console","log","output","json","error","extractGPTAnalysis","transcription","JSON","stringify","headers","result","stopRecording","handleDoneClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","src","controls","_c","$RefreshReg$"],"sources":["/Users/pranavpujar/Library/Mobile Documents/com~apple~CloudDocs/Desktop/hack_submission/RateMySpeech/src/components/VoiceRecorder.jsx"],"sourcesContent":["// src/VoiceRecorder.jsx\nimport React, { useState, useRef } from 'react';\nimport './VoiceRecorder.css'; \n\nconst VoiceRecorder = ({ onDisplayUpdate }) => {\n  const [recording, setRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [generateable, setGenerateable] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const audioStreamRef = useRef(null);\n  const audioBlobRef = useRef(null); //stores the  blob of audio for transmission\n\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    setGenerateable(false);\n    audioStreamRef.current = stream;\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    mediaRecorderRef.current.ondataavailable = (event) => {\n      chunksRef.current.push(event.data);\n    };\n    mediaRecorderRef.current.onstop = () => {\n      const blob = new Blob(chunksRef.current, { type: 'audio/wav' });\n      const url = URL.createObjectURL(blob);\n      audioBlobRef.current = blob; // Store Blob in audioBlobRef\n      setAudioURL(url);\n      chunksRef.current = [];\n      // Stop all tracks to release the microphone\n      audioStreamRef.current.getTracks().forEach((track) => track.stop());\n    };\n    mediaRecorderRef.current.start();\n    setRecording(true);\n  };\n\n  const transmitAudioToBackend = async () => {\n    if (audioBlobRef.current) {\n      const formData = new FormData();\n      formData.append(\"file\", audioBlobRef.current, \"recording.wav\");\n\n      try {\n        const response = await fetch(\"http://localhost:8000/audio\", { //change endpoint address prior to deployment\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (response.ok) {\n          console.log(\"Audio file successfully transmitted to the backend\");\n          const output = await response.json();\n          return output; // Return the response JSON\n        } else {\n          console.error(\"Failed to transmit audio file\");\n        }\n      } catch (error) {\n        console.error(\"Error transmitting audio file\", error);\n      }\n    } else {\n      console.error(\"No audio to transmit\");\n    }\n  };\n\n  const extractGPTAnalysis = async (transcription) => {\n    console.log(JSON.stringify({ transcription }))\n    try {\n      const response = await fetch(\"http://localhost:8000/evaluate\", { //change endpoint address prior to deployment\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ transcription }),\n      });\n\n      const result = await response.json();\n      console.log(result);\n\n      onDisplayUpdate(result);\n\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n    setGenerateable(true);\n  };\n\n  const handleDoneClick = async () => {\n    const response = await transmitAudioToBackend();\n    await extractGPTAnalysis(response.transcription);\n\n    setAudioURL('');\n    setGenerateable(false);\n  };\n\n  return (\n    <div className=\"text-holder\">\n      <h1>Audio Recorder</h1>\n      <div className=\"button-container\">\n        <button\n          onClick={startRecording}\n          disabled={recording}\n          className=\"record-button\"\n          type=\"button\"\n        >\n          Record\n        </button>\n        <button\n          onClick={stopRecording}\n          disabled={!recording}\n          className=\"stop-button\"\n          type=\"button\"\n        >\n          &#x25A0; {/* Unicode for the stop icon */}\n        </button>\n      </div>\n      {audioURL && <audio src={audioURL} controls />}\n      {generateable && (\n        <button onClick={handleDoneClick} className=\"done-button\" type=\"button\">\n          Analyze Performance\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default VoiceRecorder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}